image: vlafeychine/rust

stages:
  - check
  - build
  - tests
  - docs

variables:
  CARGO_HOME: "$CI_PROJECT_DIR/.cache/cargo/"
  RUSTFLAGS: "-D warnings"

cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    - .cache/cargo/
    - target/

default:
  interruptible: true

format:
  cache: []
  stage: check
  script:
    - cargo fmt --check

lint:
  stage: check
  script:
    - cargo clippy --all-targets --all-features

build:
  stage: build
  script:
    - cargo build

tests:
  stage: tests
  variables:
    CARGO_INCREMENTAL: 0
    LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"
    RUSTDOCFLAGS: "-Cpanic=abort"
    RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"

  script:
    - cargo test
    - grcov . -s . --binary-path ./target/debug/ -t cobertura --branch --ignore "*cargo*" --ignore-not-existing --excl-line "panic!" --excl-br-line "panic!" -o coverage.xml 
    - sed -n '3p' coverage.xml | grep -oE '[a-z-]+="[0-9](.[0-9]+)?"' | sed -r 's/(branch-rate|line-rate)="(0|(1)).([0-9]{2})([0-9]{2})[0-9]*"/\1="\3\4.\5%"/'
    - find target -name "*.gcda" -name "*.gcno" -delete

  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

  coverage: '/^branch-rate="\d+.\d+%"/'

docs:
  stage: docs
  only:
    refs:
      - main
  script:
    - cargo doc --no-deps
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -r target/doc/* v-lafeychine@zamok.crans.org:www/.
