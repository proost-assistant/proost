WHITESPACE = _{ WHITE_SPACE }
COMMENT = _{ "//" ~ (!"\n" ~ ANY)* }
number = @{ ASCII_DIGIT+ }
filename = @{ !keywords ~ ( ASCII_ALPHANUMERIC | PUNCTUATION )+ }
wildcard = @{"_"}
string = @{!keywords ~ ASCII_ALPHA ~ ( "_" | ASCII_ALPHANUMERIC )* }
keywords = @{ ( "fun" | "def" | "check" | "eval" | "search" | "import" | "Prop" | "Type" | "Sort" ) ~ !ASCII_ALPHANUMERIC }
eoi = _{ !ANY }



Term = _{ Abs | dProd | Prod | App | VarDecl | Var | Prop | Type | Sort | "(" ~ Term ~ ")" }
term_prod = _{ App | Abs | dProd | VarDecl | Var | Prop | Type | Sort | "(" ~ Prod ~ ")" | "(" ~ term_prod ~ ")" }
term_app = _{ Abs | VarDecl | Var | Prop | Type | Sort | "(" ~ App ~ ")" | "(" ~ Prod ~ ")" | "(" ~ dProd ~ ")" | "(" ~ term_app ~ ")" } 
term_dprod = _{ App | Abs | Prod | dProd | VarDecl | Var | Prop | Type | Sort | "(" ~ term_dprod ~ ")" }
term_abs = _{ App | Abs | Prod | dProd | VarDecl | Var | Prop | Type | Sort | "(" ~ term_abs ~ ")" }

Abs = { ( "fun" ~ ( arg_abs_par ~ ( "," ~ arg_abs_par )* ) ~ "=>" ~ Term ) }
arg_abs_par = _{ arg_abs | "(" ~ arg_abs_par ~ ")" }
arg_abs = { (wildcard | string)+ ~ ":" ~ term_abs }

dProd = { "(" ~ ( arg_dprod_par ~ ( "," ~ arg_dprod_par )* ) ~ ")" ~ "->" ~ Term }
arg_dprod_par = _{ arg_dprod | "(" ~ arg_dprod_par ~ ")" }
arg_dprod = { (wildcard | string)+ ~ ":" ~ term_dprod }

App = { term_app ~ term_app+ }
Prod = { term_prod ~ ( "->" ~ term_prod )+ }
Prop = { "Prop" }

Type = { "Type" ~ univ? }
Sort = { "Sort" ~ univ? }
univ = _{ Plus | Max | IMax | Num | string | "(" ~ univ ~ ")" }
univ_plus = _{ Max | IMax | Num | string | "(" ~ univ ~ ")" }
Num = { number }
Plus = { univ_plus ~ ( "+" ~ number )+ }
Max = { ( "max" ~ "(" ~ univ ~ "," ~ univ ~ ")" ) | ( "max" ~ univ ~ univ ) }
IMax = { ( "imax" ~ "(" ~ univ ~ "," ~ univ ~ ")" ) | ( "imax" ~ univ ~ univ ) }

Var = { string }
VarDecl = ${ string ~ arg_univ }
stringDecl = ${ string ~ univ_decl }

arg_univ = !{".{" ~ (univ ~ ("," ~ univ)* )? ~ "}"}
univ_decl = !{".{" ~ (string ~ ("," ~ string)* )? ~ "}"}

Args = { (arg)*   }
arg = _{ "(" ~ (wildcard | string)+ ~ ":" ~ Term ~ ")"}

Command = _{ Define | Declaration | DeclarationCheckType | CheckType | GetType | DefineCheckType | Eval | ImportFile | Search}
Define = { "def" ~ string ~ Args ~ ":=" ~ Term }
DefineCheckType = { "def" ~ string ~ Args ~ ":" ~ Term ~ ":=" ~ Term }
Declaration = { "def" ~ stringDecl ~ Args ~ ":=" ~ Term }
DeclarationCheckType = { "def" ~ stringDecl ~ Args ~ ":" ~ Term ~ ":=" ~ Term }
CheckType = { "check" ~ Term ~ ":" ~ Term }
GetType = { "check" ~ Term }
Eval = { "eval" ~ Term }
ImportFile = { "import" ~ filename* }
Search = { "search" ~ string }
command = _{SOI ~ Command ~ eoi }
file = _{ SOI ~ Command* ~ eoi }
